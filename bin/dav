#!/usr/bin/env ruby
require 'rubygems'
require 'davclient'

def print_usage
  puts "usage: #{$0} COMMAND [ARGS]"
  puts ""
  puts "Available #{$0} commands:"
  puts "   ls        List files on webdav server"
  puts "   pwd       Print current working url"
  puts "   cd        Change current working url"
  puts "   propfind  Print webdav properties for url"
  puts "   mkcol     Make collection"
  puts "   options   Display webservers WebDAV options"
  puts ""
  puts "See '#{$0} COMMAND -h' for more information on a specific command."
  exit
end

def exec_dav(args)
  command =  args[0]
  if(command == "-h" or command =~ /help/ or command =~ /\?/) then
    print_usage
  end

  if(command == "-v" or command =~ /version/ ) then
    puts "#{$0} version " + WebDAV.version
    exit
  end

  case command
    when "ls" then
      require 'davclient/dav-ls'
      LsCLI.ls(args[1..100])

    when "pwd"
      cwurl = WebDAV.CWURL
      if(cwurl)
        puts cwurl
      else
        puts "#{$0}: No working url set. Use 'dav cd url' to set url"
      end

    when "cd"
      url = args[1]
      if(url == nil)then
        puts "#{$0} cd: Missing mandatory url."
        exit
      end
      begin
        WebDAV.cd(url)
        puts "Changing WebDAV URL to: " + WebDAV.CWURL
      rescue Exception => exception
        puts exception
      end

    when "mkcol"
      if(args.size == 2 )
        WebDAV.mkcol(args[1])
      else
        puts "#{$0}: usage '#{$0} mkcol url|path"
      end

    when "put"
       require 'davclient/dav-put'
       PutCLI.put(args[1..100])

    when "delete"
      if(args.size == 2)
        WebDAV.delete(args[1])
      else
        puts "#{$0}: usage '#{$0} delete url|path"
      end

    when "propfind"
      require 'davclient/dav-propfind'
      PropfindCLI.propfind(args[1..100])

    when "props"
      require 'davclient/dav-propfind'
      PropfindCLI.propfind(args[1..100])

    when "options"
       if(args.size == 2 or args.size == 1)
         puts WebDAV.options(args[1])
       else
        puts "#{$0}: usage '#{$0} options [url]"
       end

    else
      puts "Unknown command :'" + command + "'"
      print_usage
  end

end

exec_dav(ARGV)

